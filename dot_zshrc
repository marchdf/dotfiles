
# paths for OLCF HPC, putting this in zshenv doesn't work
if [ "${LMOD_SYSTEM_NAME}" = "frontier" ]; then
   . ${HOME}/.oh-my-zsh/custom/functions_olcf_hpc.zsh
   load_custom_modules
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

zinit ice lucid depth"1"
zinit light romkatv/powerlevel10k

zinit wait lucid for \
       "OMZP::git" \
       "OMZP::poetry" \
       "OMZP::pyenv" \
       "OMZP::tmux" \
       "OMZP::zoxide"

zinit wait lucid light-mode for id-as'auto' has'fzf' @Aloxaf/fzf-tab

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"
CORRECT_IGNORE_FILE='.*'

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(emacs fzf)

source $ZSH/oh-my-zsh.sh

# User configuration

# better terminal colors
export TERM=xterm-256color

# This is a bit sneaky... but nice!
# Separate up arrow lookback for local and global ZSH history
# http://superuser.com/questions/446594/separate-up-arrow-lookback-for-local-and-global-zsh-history/691603
# up/down arrow steps through LOCAL terminal history
# Ctrl-up/down steps through GLOBAL terminal history
# Ctrl-R searches global terminal history
bindkey "${terminfo[kpp]}" up-line-or-local-history
bindkey "${terminfo[knp]}" down-line-or-local-history

up-line-or-local-history() {
    zle set-local-history 1
    zle up-line-or-history
    zle set-local-history 0
}
zle -N up-line-or-local-history
down-line-or-local-history() {
    zle set-local-history 1
    zle down-line-or-history
    zle set-local-history 0
}
zle -N down-line-or-local-history

bindkey "^[[1;5A" up-line-or-history    # [CTRL] + Cursor up
bindkey "^[[1;5B" down-line-or-history  # [CTRL] + Cursor down

# Use ctrl-p/n to go up/down search
bindkey "^P" up-line-or-beginning-search
# bindkey "^N" down-line-or-beginning-search

# Better history
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=$HISTSIZE
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS

if [ "${NREL_CLUSTER}" = "eagle" ] || [ "${NREL_CLUSTER}" = "ellis" ]; then
    umask u=rwx,go=rx,o=rx
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
