# -*- mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-

# Copyright (c) 2024 Marc Henry de Frahan

# According to the Zsh Plugin Standard:
# https://zdharma-continuum.github.io/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html

0=${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}
0=${${(M)0:#/*}:-$PWD/$0}

# Then ${0:h} to get plugin's directory

if [[ ${zsh_loaded_plugins[-1]} != */personal && -z ${fpath[(r)${0:h}]} ]] {
    fpath+=( "${0:h}" )
}

# Standard hash for plugins, to not pollute the namespace
typeset -gA Plugins
Plugins[PERSONAL_DIR]="${0:h}"

# Aliases

alias ..="cd .."
alias ..2="cd ../.."
alias ..3="cd ../../.."
alias ..4="cd ../../../.."
alias ..5="cd ../../../../.."
alias ge="$EMACS_PLUGIN_LAUNCHER --no-wait"
alias e="$EMACS_PLUGIN_LAUNCHER -nw"
alias ek='emacsclient -e "(kill-emacs)"'
alias rmeps="rm *.eps"
alias rmpng="rm *.png"
alias rmpdf="rm -i *.pdf"
alias sshot="import ~/Desktop/screenshot.jpg" # screenshot (pick area to grab)
alias empty_space="printf ''\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n''"
alias lt="ls -lt"
alias lr="ls -ltr"

# Improving CLI
if [[ -x "$(command -v htop)" ]]; then alias top="htop"; fi
if [[ -x "$(command -v prettyping)" ]]; then alias ping="prettyping"; fi
if [[ -x "$(command -v tldr)" ]]; then alias help="tldr"; fi

# Weather using https://github.com/chubin/wttr.in
alias weather="curl wttr.in/\?m"

# upgrade all python packages with pip.
# from http://mikegrouchy.com/blog/2014/06/pro-tip-pip-upgrade-all-python-packages.html
# periodically check this to make sure that pip didn't add this new feature
alias pip3_upgrade_all="pip --disable-pip-version-check list --outdated --format=json | python -c \"import json, sys; print('\n'.join([x['name'] for x in json.load(sys.stdin)]))\" | xargs -n1 pip install -U"

# Mass renaming of files
# e.g. mmv *.dat *.dat_old
autoload -U zmv
alias mmv="noglob zmv -W"

# Cluster aliases
if [[ -x "$(command -v qstat)" ]]; then
    alias qs="qstat -u $USER";
    alias job_node_ids="qstat -u $USER -f | grep -e 'Job\ Id\|exec_host\|Job_Name'"
fi

if [[ -x "$(command -v squeue)" ]]; then
    alias qs="squeue -u $USER -o '%12i %.9P %20j %.2t %.10M %.6D %r %N'"
    alias qnodes="sinfo -o '%24P %.5a  %.12l  %.16F'"
fi

# Functions

# print each directory of argument $PATH on its own line
function prettypath() { echo ${1-$PATH} | sed 's/:/\n/g'; }

# Calls the teatimer script
function tt() { ~/bin/teatimer.sh "$@" &}

# Calls the pdf2eps script
function pdf2eps() { ~/bin/pdf2eps.sh "$@" &}

# refresh directory (if the directory was deleted from underneath us
# and we are still in it, try to re-cd to the directory)
function recd() { cd `pwd`; }

# Diff two files using emacs ediff
# From: https://defunitive.wordpress.com/2011/07/23/invoking-emacs-ediff-from-the-command-line/
function ediff() {
    if [ "X${2}" = "X" ]; then
        echo "USAGE: ediff <FILE 1> <FILE 2>"
    else
        # The --eval flag takes lisp code and evaluates it with emacs
        "$EMACS_PLUGIN_LAUNCHER" -nw --eval "(ediff-files \"$1\" \"$2\")"
    fi
}

# diff with diff-so-fancy if available.
function diff() {
    if [[ -x "$(command -v diff-so-fancy)" ]]; then
        /usr/bin/diff -u "$@" | diff-so-fancy
        (exit "${PIPESTATUS[0]}") # Exit with $? from diff
    else
        /usr/bin/diff --color "$@"
    fi
}

# Grep through all python scrips in home directory
function grep_python() {
    grep -r --include=\*.py --exclude-dir=.virtualenvs --exclude-dir=.emacs.d --exclude-dir=spack --exclude-dir=.oh-my-zsh "${1}" ${HOME}
}

# runs TensorBoard with a comma-separated list of all provided logdirs
# usage: multitb LOGDIR [LOGDIR...]
# from: https://github.com/tensorflow/tensorboard/issues/179
multitb() (
    set -eu
    if [ $# -eq 0 ]; then
        printf >&2 'fatal: provide at least one logdir\n'
        return 1
    fi
    tmpdir="$(mktemp -d)"
    for arg; do
        case "${arg}" in
            /*) ln -s "${arg}" "${tmpdir}/" ;;
            *) ln -s "${PWD}/${arg}" "${tmpdir}/" ;;
        esac
    done
    exit_code=0
    \command ls -l "${tmpdir}"
    printf 'tensorboard --logdir %s\n' "${tmpdir}"
    tensorboard --logdir "${tmpdir}" || exit_code=$?
    # This really should be 'find -H "${tmpdir}" -type l -delete` to
    # account for logdirs whose names start with `.`, which should
    # behave correctly on any POSIX system, but it is much more clear
    # that the version below cannot under any circumstances delete the
    # underlying data (e.g., with non-POSIX-compliant `find`(1)).
    rm "${tmpdir}"/*
    rmdir "${tmpdir}"
    return "${exit_code}"
)

function conda-start(){
    CONDA_EXEC=""
    CONDA_DIR=""
    if [[ -x "$(command -v conda)" ]]; then
        CONDA_DIR="$(conda info --base)"
        CONDA_EXEC="conda"
    elif [ -d "${HOME}/miniconda3" ]; then
        CONDA_DIR="${HOME}/miniconda3"
        CONDA_EXEC="${CONDA_DIR}/conda"
    fi

    if [ -d "${CONDA_DIR}" ]; then
        # >>> conda initialize >>>
        __conda_setup="$('${CONDA_EXEC}' 'shell.zsh' 'hook' 2> /dev/null)"
        if [ $? -eq 0 ]; then
            eval "$__conda_setup"
        else
            if [ -f "${CONDA_DIR}/etc/profile.d/conda.sh" ]; then
                . "${CONDA_DIR}/etc/profile.d/conda.sh"
            else
                export PATH="${CONDA_DIR}/bin:$PATH"
            fi
        fi
        unset __conda_setup
        # <<< conda initialize <<<
    fi

    unset CONDA_DIR
    unset CONDA_EXEC
}

{{- if eq .chezmoi.os "darwin" }}
# iTerm2 window/tab color commands
#   Requires iTerm2 >= Build 1.0.0.20110804
#   http://code.google.com/p/iterm2/wiki/ProprietaryEscapeCodes
# Forked from: https://gist.github.com/wadey/1140259
tab-color() {
    echo -ne "\033]6;1;bg;red;brightness;$1\a"
    echo -ne "\033]6;1;bg;green;brightness;$2\a"
    echo -ne "\033]6;1;bg;blue;brightness;$3\a"
}
tab-reset() {
    echo -ne "\033]6;1;bg;*;default\a"
}

# Change the color of the tab when using SSH
# reset the color after the connection closes
color-ssh() {
    if [[ -n "$ITERM_SESSION_ID" ]]; then
        trap "tab-reset" INT EXIT
        if [[ "$*" =~ "dav1|dav2|dav3" ]]; then
            tab-color 24 90 169
        elif [[ "$*" =~ "kl1|kl2" ]]; then
            tab-color 244 125 35
        elif [[ "$*" =~ "f10|frontier|andes|summit|crusher|ascent|olcf" ]]; then
            tab-color 102 44 155
        elif [[ "$*" =~ "ellis" ]]; then
            tab-color 162 29 33
        elif [[ "$*" =~ "machine3a|machine3b" ]]; then
            tab-color 180 56 148
        else
            tab-color 0 140 72
        fi
    fi
    ssh $*
}
compdef _ssh color-ssh=ssh

alias ssh=color-ssh

{{- end }}

# Use alternate vim marks [[[ and ]]] as the original ones can
# confuse nested substitutions, e.g.: ${${${VAR}}}

# vim:ft=zsh:tw=80:sw=4:sts=4:et:foldmarker=[[[,]]]
